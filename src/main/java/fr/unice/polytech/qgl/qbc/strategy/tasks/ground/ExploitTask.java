package fr.unice.polytech.qgl.qbc.strategy.tasks.ground;

import fr.unice.polytech.qgl.qbc.model.Contracts;
import fr.unice.polytech.qgl.qbc.model.Resource;
import fr.unice.polytech.qgl.qbc.model.map.Map;
import fr.unice.polytech.qgl.qbc.protocol.Action;
import fr.unice.polytech.qgl.qbc.protocol.Result;
import fr.unice.polytech.qgl.qbc.strategy.tasks.Task;

/**
 * Effectue un EXPLOIT si une ressource de contrat est présente dans la zone où se trouve le raid
 *
 * @author Robin Alonzo
 */
public class ExploitTask implements Task {

    private Map map;
    private Contracts contracts;

    private Action lastAction;

    public ExploitTask(Map map, Contracts contracts){
        this.map = map;
        this.contracts = contracts;
    }

    @Override
    public Action getDecision() {
        Resource resource = map.needExploit(contracts);
        if(resource != null){
            lastAction = Action.exploit(resource);
            return lastAction;
        }
        return null;
    }

    @Override
    public void acknowledgeResult(Result result) {
        Resource exploitedResource = Resource.toResource(lastAction.getStringParameter(Action.ParameterName.RESOURCE));
        map.setExploit(exploitedResource);
        contracts.updateAmountResource(exploitedResource,result.getExploitedAmount());
    }

}
